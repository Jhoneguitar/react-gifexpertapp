{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OACI,sBAAMC,SAhBW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAc,MAUlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAzBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCCb,IAAMO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIlC,OAFAc,QAAQC,IAAML,EAAOV,GAGjB,sBAAKgB,UAAU,yCAAf,UAEI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCJCS,EAAU,SAAC,GAAmB,IAAhBrB,EAAe,EAAfA,SAKvB,ECNW,SAAuBA,GAElC,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OArBAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAAEtB,IASEuB,EDtB0BK,CAAc5B,GAAlCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAiCrB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAoDlB,EAApD,OAEEsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAgBQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGQA,GAFEA,EAAIC,aE5BnBkB,EApCM,WAGjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,aADA,CACC,EAAD,CAEIA,SAAWA,GADLA,Y,MCpBlC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.54957e4c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');//si no pongo el string vacio, el estado queda undefined y muestra un error en consola\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n        \r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats =>[inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n\r\n        // console.log('Submit hecho');\r\n        // setCategories\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=dhpglynmSn1TgvH1IJIEk2HFX9WwcV4l`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n     \r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    console.log(  title, url  );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            {/* { img.title } */}\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    // const [count, setcount] = useState(0);\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    // useEffect( ()=> {\r\n    //     getGifs( category )\r\n    //         .then( imgs => setImages( imgs ) );\r\n    // }, [ category ] )\r\n\r\n    // const getGifs = async() => {\r\n\r\n    //     const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=dhpglynmSn1TgvH1IJIEk2HFX9WwcV4l`;\r\n    //     const resp = await fetch( url );\r\n    //     const { data } = await resp.json();\r\n\r\n    //     const gifs = data.map( img => {\r\n         \r\n    //         return{\r\n    //             id: img.id,\r\n    //             title: img.title,\r\n    //             url: img.images?.downsized_medium.url\r\n    //         }\r\n\r\n    //     });\r\n\r\n    //     console.log( gifs );\r\n    //     setImages( gifs );\r\n\r\n    // }\r\n    //Todo el código anterior se transfirió a helpers\r\n\r\n    \r\n    // getGifs();\r\n\r\n    // console.log(images);\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>  }\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n            {/* <h3> { count } </h3>\r\n            <button onClick={ ()=> setcount( count + 1 ) }></button> */}\r\n            {/* <ol>\r\n               {\r\n                //    images.map( image=>{\r\n                //        return <li key={ image.id }> { image.title } </li>\r\n                //    })\r\n                //También se puede desestructurar de las siguiente forma\r\n                images.map( ({id, title}) =>(\r\n                    <li key={ id }> { title } </li>\r\n                ) )\r\n               }\r\n            </ol> */} \r\n            {\r\n                images.map( img =>(\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        // img={ img } \r\n                        {...img}\r\n                    />\r\n                ) )\r\n            }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport default function useFetchGifs( category ) {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=> {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n      \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n  \r\n            })\r\n\r\n    }, [ category ] )\r\n\r\n    // setTimeout(() => {\r\n    //     setstate({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    return state;// { data:[], loading:true };\r\n  \r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['Metallica', 'Megadeth', 'Slayer'];\r\n    const [categories, setCategories] = useState(['Metallica']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     // setCategories( [...categories, 'Black Out'] ); //una forma\r\n    // setCategories( cats =>[...cats, 'Black Out'] );\r\n    // }\r\n\r\n    // console.log(categories);\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            {/* <button onClick= { handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        // return <li key={ category }> {category} </li>\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category } \r\n                        />\r\n                     ) )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}